# API for matrixprofiler package

## Exported functions

binary_split(n, rcpp = TRUE)
complexity(data)
contrast(negative_data, positive_data, window_size, positive_matrix = NULL, exclusion_zone = 0.5, distance = c("euclidean", "pearson"), n_workers = 1L, progress = TRUE)
corr_ed(data, w, rcpp = TRUE)
ed_corr(data, w, rcpp = TRUE)
mass(pre_obj, data, query = data, index = 1, version = c("v3", "v2"), n_workers = 1)
mass_pre(data, window_size, query = NULL, type = c("normalized", "non_normalized", "absolute", "weighted"), weights = NULL)
mode(x, rcpp = FALSE)
mov_max(data, window_size)
mov_mean(data, window_size, type = c("ogita", "normal", "weighted", "fading"), eps = 0.9)
mov_min(data, window_size)
mov_std(data, window_size, rcpp = TRUE)
mov_sum(data, window_size, type = c("ogita", "normal", "weighted", "fading"), eps = 0.9)
mov_var(data, window_size, type = c("ogita", "normal", "weighted", "fading"), eps = 0.9)
movmean_std(data, window_size, rcpp = TRUE)
mpx(data, window_size, query = NULL, exclusion_zone = 0.5, s_size = 1, idxs = TRUE, distance = c("euclidean", "pearson"), n_workers = 1, progress = TRUE)
muinvn(data, window_size, n_workers = 1)
normalize(data, min_lim = 0, max_lim = 1, rcpp = FALSE)
scrimp(data, window_size, query = NULL, exclusion_zone = 0.5, s_size = 1, pre_scrimp = 0.25, n_workers = 1, progress = TRUE)
stamp(data, window_size, query = NULL, exclusion_zone = 0.5, s_size = 1, n_workers = 1, progress = TRUE)
std(data, na.rm = FALSE, rcpp = TRUE)
stomp(data, window_size, query = NULL, exclusion_zone = 0.5, n_workers = 1, progress = TRUE)
zero_crossing(data, window_size)
znorm(data, rcpp = TRUE)
